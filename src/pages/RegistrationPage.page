<apex:page controller="RegistrationController" title="Registration">
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
<head>
	<apex:stylesheet value="{!$Resource.style}"/>
</head>
<body>
	<apex:form>
	<apex:pageMessages id="message-id"/>
	<apex:actionFunction name="setParameters" action="{!doRegistration}" reRender="message-id">
	<apex:param name="surname" value="" assignTo="{!surname}" />
	<apex:param name="name" value="" assignTo="{!name}" />
	<apex:param name="middleName" value="" assignTo="{!middleName}" />
	<apex:param name="login" value="" assignTo="{!login}" />
	<apex:param name="password" value="" assignTo="{!password}" />
</apex:actionFunction>
</apex:form>

<apex:slds />
<div class="slds-form--stacked slds-p-around--medium slds-m-bottom--x-small">
	<form name="form">
		<div class="slds-form-element">
			<label class="slds-form-element__label">
				<abbr class="slds-required" title="required">*</abbr>Name
			</label>
			<div class="slds-form-element__control">
				<input type="text" id="name-id" class="slds-input" name="name" placeholder="Name" />
			</div>
		</div>
		<div class="slds-form-element">
			<label class="slds-form-element__label">
				<abbr class="slds-required" title="required">*</abbr>Surname
			</label>
			<div class="slds-form-element__control">
				<input type="text" id="surname-id" class="slds-input" name="surname" placeholder="Surname" />
			</div>
		</div>
		<div class="slds-form-element">
			<label class="slds-form-element__label">
				<abbr class="slds-required" title="required">*</abbr>Middle Name
			</label>
			<div class="slds-form-element__control">
				<input type="text" id="middle-name-id" class="slds-input" name="middleName" placeholder="Middle Name" />
			</div>
		</div>
		<div class="slds-form-element">
			<label class="slds-form-element__label">
				<abbr class="slds-required" title="required">*</abbr>Login
			</label>
			<div class="slds-form-element__control">
				<input type="text" id="login-id" class="slds-input" name="login" placeholder="Login" />
			</div>
		</div>
		<div class="slds-form-element">
			<label class="slds-form-element__label">
				<abbr class="slds-required" title="required">*</abbr>Password
			</label>
			<div class="slds-form-element__control">
				<input type="password" id="password-id" class="slds-input" name="password" placeholder="Password" />
			</div>
		</div>
		<div class="slds-form-element">
			<label class="slds-form-element__label">
				<abbr class="slds-required" title="required">*</abbr>Repeat password
			</label>
			<div class="slds-form-element__control">
				<input type="password" id="repeat-password-id" class="slds-input" name="repeatPassword" placeholder="Repeat password" />
			</div>
		</div>
	</form>
	<div class="slds-m-vertical--medium"></div>
	<div class="slds-align_absolute-center">
		<button class="slds-button slds-button_brand" onclick="registration()" reRender="view">Registration</button>
	</div>
</div>


<script type="text/javascript">

function showError(container, errorMessage) {
	container.className = 'error';
	var msgElem = document.createElement('span');
	msgElem.className = "error-message";
	msgElem.innerHTML = errorMessage;
	container.appendChild(msgElem);
};

function resetError(container) {
	container.className = '';
	if (container.lastChild.className == "error-message") {
		container.removeChild(container.lastChild);
	}
};

function registration() {
	var elems = form.elements;

	resetError(elems.name.parentNode);
	if (elems.name.value == '') {
		showError(elems.name.parentNode, 'Please enter your name!');
		return false;
	}

	resetError(elems.name.parentNode);
	if (!(/^[A-ZА-Я][a-zа-я]+('[a-zа-я]+|-[A-ZА-Я][a-zа-я]+)?$/.test(elems.name.value))) {
		showError(elems.name.parentNode, 'The name can only contain letters and the symbol "-" and start with a capital letter!');
        return false;
    }

	resetError(elems.surname.parentNode);
	if (elems.surname.value == '') {
		showError(elems.surname.parentNode, 'Please enter your surname!');
		return false;
	}

	resetError(elems.surname.parentNode);
	if (!(/^[A-ZА-Я][a-zа-я]+('[a-zа-я]+|-[A-ZА-Я][a-zа-я]+)?$/.test(elems.surname.value))) {
		showError(elems.surname.parentNode, 'Surname can contain only letters and the symbol "-" and start with a capital letter!');
		return false;
	}

	resetError(elems.middleName.parentNode);
	if (elems.middleName.value == '') {
		showError(elems.middleName.parentNode, 'Please enter your middle name!');
		return false;
	}

	resetError(elems.middleName.parentNode);
	if (!(/^[A-ZА-Я][a-zа-я]+$/.test(elems.middleName.value))) {
		showError(elems.middleName.parentNode, 'The middle name must contain only letters and start with a capital letter!');
		return false;
	}

	resetError(elems.login.parentNode);
	if (elems.login.value == '') {
		showError(elems.login.parentNode, 'Please enter your login!');
		return false;
	}

	resetError(elems.login.parentNode);
	if (elems.login.value.length < 5) {
		showError(elems.login.parentNode, 'The username must contain more than 5 characters!');
		return false;
	} else if (!(/^[A-Za-z][A-Za-z0-9_]+$/.test(elems.login.value))) {
		showError(elems.login.parentNode, 'The username can only contain Latin letters and numbers!');
		return false;
	}

	resetError(elems.password.parentNode);
	if (elems.password.value == '') {
		showError(elems.password.parentNode, 'Please enter your password!');
		return false;
	}

	resetError(elems.password.parentNode);
	if (elems.password.value.length < 6) {
		showError(elems.password.parentNode, 'The password must contain more than 5 characters!');
		return false;
	} else if (!(/^(?=.*[a-z])(?=.*[A-Z]).{4,}$/.test(elems.password.value))) {
		showError(elems.password.parentNode, 'The password can only contain Latin letters and numbers!');
		return false;
	}

	resetError(elems.repeatPassword.parentNode);
	if (elems.repeatPassword.value == '') {
		showError(elems.repeatPassword.parentNode, 'Please repeat your password!');
		return false;
	}

	resetError(elems.repeatPassword.parentNode);
	if (elems.password.value != elems.repeatPassword.value) {
		showError(elems.repeatPassword.parentNode, 'Passwords do not match!');
		return false;
	}

	let surname = document.querySelector('#surname-id').value;
	let name = document.querySelector('#name-id').value;
	let middleName = document.querySelector('#middle-name-id').value;
	let login = document.querySelector('#login-id').value;
	let password = document.querySelector('#password-id').value;
	let repeatPassword = document.querySelector('#repeat-password-id').value;

	setParameters(surname, name, middleName, login, password);
	
};

</script>

</body>
</html>
</apex:page>